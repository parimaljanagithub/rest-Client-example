/**
default location for Groovy file is inside var or SRC folder
**/
@Library('OPEN2') _
String newVersionSTG , newTagSTG

pipeline {
 agent any
 parameters {
  string(name: 'BRANCH_NAME', defaultValue: 'Develop', description: 'The git branch or tag name')
  booleanParam(name: 'BUILD_FROM_TAG', defaultValue: false, description: 'Is this deployment build from a git tag?')
  booleanParam(name: 'IS_HOTFIX', defaultValue: false, description: 'Is this deployment for a hotfix?')
  booleanParam(name: 'INCR_MAJOR_VERSION', defaultValue: false, description: 'Are you going to increasing major version? (e.g. 2.x.0).')
  booleanParam(name: 'NEVER_TO_PROD', defaultValue: false, description: 'Will this deployment never go for PROD?')
  choice(name: 'REPO_TYPE', choices: 'SNAPSHOT\nRELEASE', description: 'Repository type (usually use SNAPSHOT)')
    }

 stages {
  stage('[STG] Check Frodo') {
     steps {
       input(
                        message: 'Please make sure the useless instances already suspended/deleted.',
                        ok: 'Yes, I have checked, let\'s go!'
                )
            }
     }
   stage('[STG] Build Artifact') {
     steps {
       echo 'inside stage two and step 1'
       sh "BRANCH_NAME=${params.BRANCH_NAME} "
       sh "BUILD_FROM_TAG=${params.BUILD_FROM_TAG} "
       sh "IS_HOTFIX=${params.IS_HOTFIX} "
       sh "INCR_MAJOR_VERSION=${params.INCR_MAJOR_VERSION} "
       sh "NEVER_TO_PROD=${params.NEVER_TO_PROD} "
       sh "REPO_TYPE=${params.REPO_TYPE} " 
       script {
         newVersionSTG = open2Utils.getDate()
         if (!params.BUILD_FROM_TAG && params.IS_HOTFIX && (params.INCR_MAJOR_VERSION || param.BRANCH_NAME == 'Develop') ) {
            error 'Hotfix deployment cannot work with develop branch nor update major version'
           }
        
         if (params.BUILD_FROM_TAG) {
            newVersionSTG = readMavenPom(file: 'pom.xml').getVersion()
            echo "inside build from tag pom version is . = "
            echo "${newVersionSTG}"
            String d22 = open2Utils.getDate()
            echo "${d22}"
          
             newTagSTG = newVersionSTG.substring(newVersionSTG.indexOf('-', 9) + 1)
             echo "${newTagSTG}"
           }
        
            
            
           //git operation
           sh "git pull ${params.BRANCH_NAME}"
        
        
          } //script end
       
         } //step end
       }
  }
}
